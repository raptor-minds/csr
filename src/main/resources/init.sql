-- MySQL Script generated by MySQL Workbench
-- Sun May 18 15:37:18 2025
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema csr
-- -----------------------------------------------------
DROP DATABASE IF EXISTS `csr` ;

-- -----------------------------------------------------
-- Schema csr
-- -----------------------------------------------------
CREATE DATABASE IF NOT EXISTS `csr` DEFAULT CHARACTER SET utf8 ;
-- -----------------------------------------------------
-- Schema new_schema1
-- -----------------------------------------------------
USE `csr` ;

-- -----------------------------------------------------
-- Table `csr`.`user`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `csr`.`user` ;

CREATE TABLE IF NOT EXISTS `csr`.`user` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `username` VARCHAR(45) NOT NULL,
  `password` VARCHAR(255) NULL,
  `role` VARCHAR(10) NOT NULL DEFAULT 'USER',
  `location` VARCHAR(50) NULL,
  `reviewer` INT NULL,
  `create_time` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `nickname` VARCHAR(50) NULL,
  `real_name` VARCHAR(50) NULL,
  `gender` VARCHAR(10) NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `username_UNIQUE` (`username` ASC),
  INDEX `fk_user_reviewer_idx` (`reviewer` ASC),
  CONSTRAINT `fk_user_reviewer`
    FOREIGN KEY (`reviewer`)
    REFERENCES `csr`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `csr`.`event`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `csr`.`event` ;

CREATE TABLE IF NOT EXISTS `csr`.`event` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NULL,
  `description` VARCHAR(1000) NULL,
  `start_time` DATETIME NULL,
  `end_time` DATETIME NULL,
  `created_at` DATETIME NULL,
  `duration` INT NULL,
  `total_money` DECIMAL NULL,
  `location` VARCHAR(45) NULL,
  `avatar` VARCHAR(255) NULL,
  `vendor_id` VARCHAR(45) NULL,
  `type` VARCHAR(20) NOT NULL DEFAULT 'HYBRID',
  `status` VARCHAR(20) NOT NULL DEFAULT 'ACTIVE',
  `visible_locations` VARCHAR(1000) NULL,
  `visible_roles` VARCHAR(1000) NULL,
  `is_display` BOOLEAN NULL DEFAULT TRUE,
  `detail_image` VARCHAR(2000) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;

-- Performance optimization indexes for event queries
CREATE INDEX `idx_event_status_time` ON `csr`.`event` (`status`, `start_time`, `end_time`);


-- -----------------------------------------------------
-- Table `csr`.`template`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `csr`.`template` ;

CREATE TABLE IF NOT EXISTS `csr`.`template` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NULL,
  `total_time` INT NULL,
  `file_link` VARCHAR(45) NULL,
  `detail` JSON NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `csr`.`activity`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `csr`.`activity` ;

CREATE TABLE IF NOT EXISTS `csr`.`activity` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NULL,
  `event_id` INT NULL,
  `template_id` INT NULL,
  `duration` INT NULL,
  `icon` VARCHAR(45) NULL,
  `description` VARCHAR(1000) NULL,
  `start_time` DATETIME NULL,
  `end_time` DATETIME NULL,
  `status` VARCHAR(20) NULL,
  `visible_locations` JSON NULL,
  `visible_roles` JSON NULL,
  `created_at` DATETIME NULL DEFAULT CURRENT_TIMESTAMP,
  `image_1` VARCHAR(2000) NULL,
  `image_2` VARCHAR(2000) NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `activity_event_fk`
    FOREIGN KEY (`event_id`)
    REFERENCES `csr`.`event` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `activity_template_fk`
    FOREIGN KEY (`template_id`)
    REFERENCES `csr`.`template` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `activity_event_fk_idx` ON `csr`.`activity` (`event_id` ASC);

CREATE INDEX `activity_template_fk_idx` ON `csr`.`activity` (`template_id` ASC);

-- Performance optimization indexes for activity queries
CREATE INDEX `idx_activity_event_status_duration` ON `csr`.`activity` (`event_id`, `status`, `duration`);


-- -----------------------------------------------------
-- Table `csr`.`role`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `csr`.`role` ;

CREATE TABLE IF NOT EXISTS `csr`.`role` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `role` VARCHAR(45) NULL,
  `activity_id` INT NULL,
  `event_name` VARCHAR(45) NULL,
  `activity_name` VARCHAR(45) NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `user_event_activity_fk`
    FOREIGN KEY (`activity_id`)
    REFERENCES `csr`.`activity` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `user_event_activity_fk_idx` ON `csr`.`role` (`activity_id` ASC);


-- -----------------------------------------------------
-- Table `csr`.`user_activity`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `csr`.`user_activity` ;

CREATE TABLE IF NOT EXISTS `csr`.`user_activity` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `user_id` INT NULL,
  `activity_id` INT NULL,
  `state` VARCHAR(45) NULL,
  `endorsed_by` INT NULL,
  `endorsed_at` DATETIME NULL,
  `created_at` DATETIME NULL,
  `chain_id` VARCHAR(45) NULL,
  `detail` JSON NULL,
  `deleted` BOOLEAN NOT NULL DEFAULT FALSE,
  PRIMARY KEY (`id`),
  CONSTRAINT `user_activity_user_fk`
    FOREIGN KEY (`user_id`)
    REFERENCES `csr`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `user_activity_activity_fk`
    FOREIGN KEY (`activity_id`)
    REFERENCES `csr`.`activity` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `user_activity_user_fk_idx` ON `csr`.`user_activity` (`user_id` ASC);

CREATE INDEX `user_activity_activity_fk_idx` ON `csr`.`user_activity` (`activity_id` ASC);

-- Performance optimization indexes for total participants and total time calculations
CREATE INDEX `idx_user_activity_activity_state` ON `csr`.`user_activity` (`activity_id`, `state`);

CREATE INDEX `idx_user_activity_covering` ON `csr`.`user_activity` (`activity_id`, `state`, `user_id`);

CREATE INDEX `idx_user_activity_user_state` ON `csr`.`user_activity` (`user_id`, `state`);


-- -----------------------------------------------------
-- Table `csr`.`attachment`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `csr`.`attachment` ;

CREATE TABLE IF NOT EXISTS `csr`.`attachment` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `user_activity_id` INT NULL,
  `name` VARCHAR(45) NULL,
  `url` VARCHAR(45) NULL,
  `create_at` DATETIME NULL,
  `chain_id` VARCHAR(45) NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `attachment_user_activity_fk`
    FOREIGN KEY (`user_activity_id`)
    REFERENCES `csr`.`user_activity` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `attachment_user_activity_fk_idx` ON `csr`.`attachment` (`user_activity_id` ASC);


-- -----------------------------------------------------
-- Table `csr`.`user_event`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `csr`.`user_event` ;

CREATE TABLE IF NOT EXISTS `csr`.`user_event` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `user_id` INT NULL,
  `event_id` INT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `user_event_user_fk`
    FOREIGN KEY (`user_id`)
    REFERENCES `csr`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `user_event_event_fk`
    FOREIGN KEY (`event_id`)
    REFERENCES `csr`.`event` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `user_event_user_fk_idx` ON `csr`.`user_event` (`user_id` ASC);

CREATE INDEX `user_event_event_fk_idx` ON `csr`.`user_event` (`event_id` ASC);


-- -----------------------------------------------------
-- Table `csr`.`user_role_map`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `csr`.`user_role_map` ;

CREATE TABLE IF NOT EXISTS `csr`.`user_role_map` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `role_id` INT NULL,
  `user_id` INT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `user_role_map_user_id_fk`
    FOREIGN KEY (`user_id`)
    REFERENCES `csr`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `user_role_map_role_id_fk`
    FOREIGN KEY (`role_id`)
    REFERENCES `csr`.`role` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
    
ENGINE = InnoDB;

CREATE INDEX `user_role_map_user_id_fk_idx` ON `csr`.`user_role_map` (`user_id` ASC);

CREATE INDEX `user_role_map_role_id_fk_idx` ON `csr`.`user_role_map` (`role_id` ASC);

-- -----------------------------------------------------
-- Table `csr`.`photo`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `csr`.`photo` ;

CREATE TABLE IF NOT EXISTS `csr`.`photo` (
  `id` BIGINT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(255) NOT NULL,
  `type` VARCHAR(45) NULL,
  `content` LONGTEXT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB
ROW_FORMAT = Dynamic;

CREATE INDEX `idx_photo_name` ON `csr`.`photo` (`name` ASC);

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
